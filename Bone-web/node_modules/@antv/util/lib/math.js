var isNumber = require('./type/isNumber');
var PRECISION = 0.00001; // numbers less than this is considered as 0
var RADIAN = Math.PI / 180;
var DEGREE = 180 / Math.PI;

function toInteger(str, radix) {
  return parseInt(str, radix || 10);
}

var mathUtil = {
  clamp: function clamp(a, min, max) {
    if (a < min) {
      return min;
    } else if (a > max) {
      return max;
    }
    return a;
  },
  isDecimal: function isDecimal(num) {
    return isNumber(num) && num % 1 !== 0;
  },
  isEven: function isEven(num) {
    return isNumber(num) && num % 2 === 0;
  },

  isFinite: isFinite,
  isInteger: Number.isInteger ? Number.isInteger : function (num) {
    return isNumber(num) && num % 1 === 0;
  },
  isNaN: isNaN,
  isNegative: function isNegative(num) {
    return isNumber(num) && num < 0;
  },
  isNumberEqual: function isNumberEqual(a, b) {
    return Math.abs(a - b) < PRECISION;
  },
  isOdd: function isOdd(num) {
    return isNumber(num) && num % 2 !== 0;
  },
  isPositive: function isPositive(num) {
    return isNumber(num) && num > 0;
  },
  mod: function mod(n, m) {
    return (n % m + m) % m;
  },
  toFloat: function toFloat(str) {
    return parseFloat(str);
  },
  toDegree: function toDegree(radian) {
    return DEGREE * radian;
  },

  toInt: toInteger,
  toInteger: toInteger,
  toRadian: function toRadian(degree) {
    return RADIAN * degree;
  },
  fixedBase: function fixedBase(v, base) {
    var str = base.toString();
    var index = str.indexOf('.');
    if (index === -1) {
      return Math.round(v);
    }
    var length = str.substr(index + 1).length;
    if (length > 20) {
      length = 20;
    }
    return parseFloat(v.toFixed(length));
  }
};

module.exports = mathUtil;