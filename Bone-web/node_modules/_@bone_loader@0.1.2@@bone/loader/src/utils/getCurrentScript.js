import resolvePath from "./resolvePath";

// IE11以下不支持find方法，但是支持filter
function arrayFind(array, find){
    let result = array.filter(find);
    return result[0];
}

export default function getCurrentScript(){
    let scripts;

    if(document.currentScript){
        // chrome、firefox、safari
        return document.currentScript;
    }else{
        // IE10以下
        scripts = [].concat.apply([], document.getElementsByTagName("script"));
        let interactiveScript = arrayFind(scripts, script => script.readyState === "interactive");
        if(interactiveScript){
            return interactiveScript;
        }
    }

    // IE11无法通过正常方式获取currentScript
    // 尝试通过错误栈获取，错误栈的最后一条是调用起始位置
    try{
        // IE11创建的Error实例，必须throw一下才能取到stack
        throw new Error("currentScript");
    }catch(e){
        try{
            let scriptUrl = e.stack.split("\n").pop().trim().replace(/^.*\(/, "").replace(/\:\d+\:\d+\)$/, "");
            let currentScript = arrayFind(scripts, script => script.src && resolvePath(script.src) === scriptUrl);
            if(currentScript){
                return currentScript;
            }
        }catch(e){}
    }

    // 如果以上方式都无法获取
    // 根据脚本的执行顺序为 scriptA run -> scriptA onload -> scriptB run -> scriptB onload
    // 可以在script run是记录模块，在script onload的时候，根据url进行注册模块
}